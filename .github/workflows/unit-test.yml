name: Run Unit Tests

on:
  push:
    branches:
      - main 
      - feature/**

jobs:
  test:
    name: Run Unit Tests
    uses: dariasmoises979-blip/pipeline-build/.github/workflows/test.yml@main
   
  create-pr:
      name: Create PR from feature to dev
      needs: test
      if: ${{ success() && startsWith(github.ref, 'refs/heads/feature/') }}
      runs-on: ubuntu-latest
      permissions:
        contents: write
        pull-requests: write
      steps:
        - name: Checkout repository
          uses: actions/checkout@v4
          with:
            fetch-depth: 0
  
        - name: Create Pull Request to dev branch
          id: create-pr
          env:
              GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          run: |
              # Verificar si ya existe un PR abierto
              existing_pr=$(gh pr list --base dev --head ${{ github.ref_name }} --state open --json number --jq '.[0].number')
    
              if [ -z "$existing_pr" ]; then
                # Crear el PR si no existe
                gh pr create \
                  --base dev \
                  --head ${{ github.ref_name }} \
                  --title "Merge ${{ github.ref_name }} → dev" \
                  --body "✅ Tests passed successfully on \`${{ github.ref_name }}\`
    
                **Branch:** \`${{ github.ref_name }}\`  
                **Target:** \`dev\`  
                **Commit:** ${{ github.sha }}"
    
                # Obtener el número del nuevo PR creado
                new_pr_number=$(gh pr list --base dev --head ${{ github.ref_name }} --state open --json number --jq '.[0].number')
                echo "pr_number=$new_pr_number" >> $GITHUB_OUTPUT
                echo "✅ PR #$new_pr_number created"
              else
                echo "pr_number=$existing_pr" >> $GITHUB_OUTPUT
                echo "ℹ️ PR #$existing_pr already exists"
              fi
    