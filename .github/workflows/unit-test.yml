name: Run Unit Tests and Merge to Dev

on:
  push:
    branches: 
      - feature/**

jobs:
  test:
    name: Run Unit Tests
    uses: dariasmoises979-blip/pipeline-build/.github/workflows/test.yml@main

  # Job: Fusiona automÃ¡ticamente cualquier rama feature/* en la rama dev
  merge-to-dev:
    name: Merge Feature to Dev
    needs: test                     # Espera que el job "test" haya terminado
    runs-on: ubuntu-latest
    if: startsWith(github.ref_name, 'feature/') && success()
    # Solo se ejecuta si:
    # - El nombre de la rama actual comienza con "feature/"
    # - Las pruebas fueron exitosas

    permissions:
      contents: write               # Necesario para hacer push al repo
      pull-requests: write          # (Opcional) Permite crear/actualizar PRs si hiciera falta

    steps:
      # Paso 1: Clonar el repositorio completo
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0                   # Obtiene todo el historial
          token: ${{ secrets.GITHUB_TOKEN }}
          persist-credentials: true

      # Paso 2: Configurar Git para los commits automÃ¡ticos
      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      # Paso 3: Hacer merge desde la rama feature/** actual hacia dev
      - name: Merge feature into dev
        run: |
          git fetch origin dev                         # Trae la Ãºltima versiÃ³n de dev
          git checkout dev                             # Cambia a la rama dev
          git merge --no-ff origin/${{ github.ref_name }} -m "Auto-merge from ${{ github.ref_name }} after successful tests"
          # origin/${{ github.ref_name }} asegura que tomamos la versiÃ³n remota actual de la feature
          git push origin dev                          # EnvÃ­a los cambios fusionados a la rama dev
                                          # EnvÃ­a los cambios al repositorio remoto

########################################3

  # Workflow: Crea automÃ¡ticamente un Pull Request desde QA hacia Integration
  # cuando el merge a dev fue exitoso y las pruebas pasaron correctamente.

    # Job 2: Crear Pull Request usando la API de GitHub
  create-pr:
      name: Create PR to QA
      needs: merge-to-dev
      runs-on: ubuntu-latest
      if: success()
  
      permissions:
        contents: read
        pull-requests: write
  
      steps:
        - name: Create Pull Request via API
          uses: actions/github-script@v7
          with:
            script: |
              const { owner, repo } = context.repo;
              
              // Verificar si ya existe un PR abierto de dev a qa
              const { data: existingPRs } = await github.rest.pulls.list({
                owner,
                repo,
                head: `${owner}:dev`,
                base: 'qa',
                state: 'open'
              });
  
              if (existingPRs.length > 0) {
                console.log(`âœ… PR already exists: #${existingPRs[0].number}`);
                console.log(`URL: ${existingPRs[0].html_url}`);
                
                // Actualizar el PR existente con un comentario
                await github.rest.issues.createComment({
                  owner,
                  repo,
                  issue_number: existingPRs[0].number,
                  body: `ðŸ”„ Dev branch updated. Tests passed successfully.\n\n**Workflow run:** https://github.com/${owner}/${repo}/actions/runs/${context.runId}`
                });
                
                return;
              }
  
              // Crear nuevo PR
              const { data: pr } = await github.rest.pulls.create({
                owner,
                repo,
                title: 'ðŸš€ Deploy dev to QA',
                head: 'dev',
                base: 'qa',
                body: `## Automatic deployment from dev to qa
                
                This PR contains the latest changes from \`dev\` branch ready for QA environment.
  
                ### ðŸ“‹ Pre-merge Checklist
                - [ ] Code has been reviewed
                - [ ] All tests are passing âœ…
                - [ ] Ready for QA environment
                
                ### ðŸ”— Links
                - **Workflow run:** https://github.com/${owner}/${repo}/actions/runs/${context.runId}
                - **Commit:** ${context.sha}
                
                ---
                *Auto-generated by GitHub Actions on ${new Date().toISOString()}*`,
                              draft: false
                            });
                
                            // AÃ±adir labels al PR
                            await github.rest.issues.addLabels({
                              owner,
                              repo,
                              issue_number: pr.number,
                              labels: ['automated', 'deployment', 'qa']
                            });
                
                            console.log(`âœ… Pull Request created: #${pr.number}`);
                            console.log(`URL: ${pr.html_url}`);
                
                            // Opcional: Asignar revisores automÃ¡ticamente
                            // await github.rest.pulls.requestReviewers({
                            //   owner,
                            //   repo,
                            //   pull_number: pr.number,
                            //   reviewers: ['tu-usuario']
                            // });