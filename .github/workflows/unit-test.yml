name: Run Unit Tests and Merge to Dev

on:
  push:
    branches: 
      - feature/**

jobs:
  test:
    name: Run Unit Tests
    uses: dariasmoises979-blip/pipeline-build/.github/workflows/test.yml@main

  # Job: Fusiona autom√°ticamente cualquier rama feature/* en la rama dev
  merge-to-dev:
    name: Merge Feature to Dev
    needs: test                     # Espera que el job "test" haya terminado
    runs-on: ubuntu-latest
    if: startsWith(github.ref_name, 'feature/') && success()
    # Solo se ejecuta si:
    # - El nombre de la rama actual comienza con "feature/"
    # - Las pruebas fueron exitosas

    permissions:
      contents: write               # Necesario para hacer push al repo
      pull-requests: write          # (Opcional) Permite crear/actualizar PRs si hiciera falta

    steps:
      # Paso 1: Clonar el repositorio completo
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0                   # Obtiene todo el historial
          token: ${{ secrets.GITHUB_TOKEN }}
          persist-credentials: true

      # Paso 2: Configurar Git para los commits autom√°ticos
      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      # Paso 3: Hacer merge desde la rama feature/** actual hacia dev
      - name: Merge feature into dev
        run: |
          git fetch origin dev                         # Trae la √∫ltima versi√≥n de dev
          git checkout dev                             # Cambia a la rama dev
          git merge --no-ff origin/${{ github.ref_name }} -m "Auto-merge from ${{ github.ref_name }} after successful tests"
          # origin/${{ github.ref_name }} asegura que tomamos la versi√≥n remota actual de la feature
          git push origin dev                          # Env√≠a los cambios fusionados a la rama dev
                                          # Env√≠a los cambios al repositorio remoto

########################################3

  # Workflow: Crea autom√°ticamente un Pull Request desde QA hacia Integration
  # cuando el merge a dev fue exitoso y las pruebas pasaron correctamente.

  # Job 2: Crear Pull Request de dev a qa
  create-pr:
    name: Create PR to QA
    needs: test  # Solo se ejecuta si los tests pasan
    runs-on: ubuntu-latest
    if: success()

    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: dev
          base: qa
          title: "üöÄ Deploy dev to QA"
          body: |
            ## Automatic deployment from dev to qa
            
            This PR contains the latest changes from `dev` branch that are ready to be deployed to `qa`.
            
            ### Changes included
            - All commits since last merge to qa
            
            ### Checklist before merging
            - [ ] Code has been reviewed
            - [ ] Tests are passing
            - [ ] Ready for QA environment
            
            ---
            **Auto-generated by GitHub Actions** - [View workflow run](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
          labels: |
            automated
            deployment
            qa
          draft: false

      - name: PR Created
        run: echo "‚úÖ Pull Request created successfully. Please review and merge manually from GitHub."