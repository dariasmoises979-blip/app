name: Notificar a Slack

on:
  push:
    branches:
      - main
      - feature/*
      - hotfix/*
      - release/*
      - develop
      - integration
      - pre
      - staging
      - pro
      - qa
      - dev
  pull_request:
    types: [opened, reopened, synchronize, closed] # incluye merge y actualizaciones

jobs:
  notificar:
    runs-on: ubuntu-latest

    steps:
      - name: Enviar notificaciÃ³n a Slack
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          if [ "${{ github.event_name }}" = "push" ]; then
            # ðŸ”¹ NotificaciÃ³n de push
            curl -X POST -H 'Content-type: application/json' \
            --data "{
              \"text\": \":rocket: *Nuevo push en* <${{ github.server_url }}/${{ github.repository }}|${{ github.repository }}> por *${{ github.actor }}* en la rama *${{ github.ref_name }}*.\n<${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }}|Ver commit>\"
            }" \
            $SLACK_WEBHOOK_URL
          
          elif [ "${{ github.event_name }}" = "pull_request" ]; then
            if [ "${{ github.event.action }}" = "opened" ]; then
              # ðŸ”¹ PR creado
              curl -X POST -H 'Content-type: application/json' \
              --data "{
                \"text\": \":sparkles: *Nuevo Pull Request* creado por *${{ github.actor }}* en <${{ github.server_url }}/${{ github.repository }}|${{ github.repository }}>.\nTÃ­tulo: *${{ github.event.pull_request.title }}*\n<${{ github.event.pull_request.html_url }}|Ver Pull Request>\"
              }" \
              $SLACK_WEBHOOK_URL
            elif [ "${{ github.event.action }}" = "synchronize" ]; then
              # ðŸ”¹ PR actualizado (nuevo commit)
              curl -X POST -H 'Content-type: application/json' \
              --data "{
                \"text\": \":arrows_counterclockwise: *Pull Request actualizado* por *${{ github.actor }}*.\n<${{ github.event.pull_request.html_url }}|Ver Pull Request>\"
              }" \
              $SLACK_WEBHOOK_URL
            elif [ "${{ github.event.action }}" = "closed" ] && [ "${{ github.event.pull_request.merged }}" = "true" ]; then
              # ðŸ”¹ PR mergeado
              curl -X POST -H 'Content-type: application/json' \
              --data "{
                \"text\": \":tada: *Pull Request mergeado!* por *${{ github.actor }}*.\nTÃ­tulo: *${{ github.event.pull_request.title }}*\n<${{ github.event.pull_request.html_url }}|Ver Pull Request>\"
              }" \
              $SLACK_WEBHOOK_URL
            elif [ "${{ github.event.action }}" = "closed" ]; then
              # ðŸ”¹ PR cerrado sin merge
              curl -X POST -H 'Content-type: application/json' \
              --data "{
                \"text\": \":no_entry: *Pull Request cerrado sin merge* por *${{ github.actor }}*.\nTÃ­tulo: *${{ github.event.pull_request.title }}*\n<${{ github.event.pull_request.html_url }}|Ver Pull Request>\"
              }" \
              $SLACK_WEBHOOK_URL
            fi
          fi

